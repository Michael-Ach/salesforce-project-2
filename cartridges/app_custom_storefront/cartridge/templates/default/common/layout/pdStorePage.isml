<iscontent type="text/html" charset="UTF-8" compact="true"/>

<isinclude template="/components/modules" sf-toolkit="off" />

<!-- Include Page Designer Campaign Banner JavaScript and Styles only once here rather than at component level. -->
<!-- There should only be one Campagin Banner added on a PD page. Multiple Banners is unsupported at the moment. -->

<isif condition="${pdict.resetEditPDMode}">
    <script> var resetCampaignBannerSessionToken = true; </script>
</isif>

<isscript>
    var assets = require('*/cartridge/scripts/assets.js');
    assets.addCss('/css/experience/components/commerceAssets/campaignBanner.css');
    assets.addJs('/js/campaignBanner.js');
</isscript>

<!DOCTYPE html>
<html lang="${require('dw/util/Locale').getLocale(request.getLocale()).getLanguage()}">
    <head>
        <!--[if gt IE 9]><!-->
            <isinclude sf-toolkit="off" template="/common/scripts" />
        <!--<![endif]-->
        <isinclude template="/common/htmlHead" />
        <isif condition="${pdict.canonicalUrl}" >
            <link rel="canonical" href="${pdict.canonicalUrl}"/>
        </isif>
        <isactivedatahead/>
        <isinclude template="/components/schema" />
    </head>
    <body>
        ${dw.system.HookMgr.callHook('app.template.beforeHeader', 'beforeHeader', pdict) ||Â ''}

        <div class="page" data-action="${pdict.action}" data-querystring="${pdict.queryString}" >
            <isinclude template="/components/header/pdStorePageHeader" />
            <div role="main" id="maincontent">
                <isreplace/>
            </div>
            <div class="home-email-signup">
                <div class="container col-md-6">
                        <div class="row">

                            <iscomment> <div class="col-sm-3 email-description">${Resource.msg('description.form.newsletter', 'homePage', null)}</div> </iscomment>
                            <form action="${URLUtils.url('Magic-Search')}" class="" method="GET">
                                <div class="form-group" required>
                                    <label class="form-control-label" for="term">
                                        <isprint value="${pdict.magicSearchForm.label}" encoding="htmlcontent" />
                                    </label>
                                    <input type="text" class="" id="term" name="term"
                                        <isprint value="${pdict.magicSearchForm.term.attributes}" encoding="off" />>
                                    <div class="invalid-feedback"></div>
                                    <button class="btn btn-primary" type="submit">Search Joke</button>
                                </div>
                            </form>
                            <div class="email-description joke-sentence"><p>Search for a joke by typing a keyword.</p></div>

                            <iscomment> <div class="col-sm-3">
                                <a class="btn btn-primary" href="${URLUtils.url('Newsletter-Show')}">
                                    ${Resource.msg('button.form.emailsignup', 'homePage', null)}    
                                </a>
                            </div>
                            <div class="col-sm-3 email-description">${Resource.msg('description.form.newsletter', 'homePage', null)}</div> </iscomment>

                        </div>
                </div>
            </div>

            <isinclude template="/components/footer/pageFooter" />
        </div>
        <div class="error-messaging"></div>
        <div class="modal-background"></div>
        <iscontentasset aid="cookie_hint" />
         <!--[if lt IE 10]>
            <isinclude sf-toolkit="off" template="/common/scripts" />
        <![endif]-->
        <iscomment>
            hook for Marketing Cloud connector & other integration which need to inject
            logic at the page end
            IMPORTANT: Note that this hook will be called to cached as well as uncached pages
                        which means you need to put privacy information into another remote include
        </iscomment>
        ${dw.system.HookMgr.callHook('app.template.afterFooter', 'afterFooter', pdict) || ''}
        <isinclude url="${URLUtils.url('ConsentTracking-Check')}"/>
    </body>
</html>
